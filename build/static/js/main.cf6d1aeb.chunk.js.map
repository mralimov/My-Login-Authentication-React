{"version":3,"sources":["components/Profile/ProfileForm.module.css","components/Layout/MainNavigation.module.css","components/Profile/UserProfile.module.css","components/StartingPage/StartingPageContent.module.css","store/auth-context.js","components/Layout/MainNavigation.js","components/Layout/Layout.js","components/Profile/ProfileForm.js","components/Profile/UserProfile.js","components/Auth/AuthForm.js","pages/AuthPage.js","components/StartingPage/StartingPageContent.js","pages/HomePage.js","App.js","index.js","components/Auth/AuthForm.module.css"],"names":["module","exports","logoutTimer","AuthContext","React","createContext","token","isLoggedIn","login","logout","calculateRemainigTime","expirationTime","currentTime","Date","getTime","AuthContextProvider","props","initialToken","tokenData","storedToken","localStorage","getItem","storedExpirationTime","remainingTime","removeItem","duration","retrieveStoredToken","useState","setToken","userIsLoggedIn","logoutHandler","useCallback","clearTimeout","useEffect","console","log","setTimeout","contextValue","setItem","Provider","value","children","MainNavigation","authCtx","useContext","history","useHistory","userIsLogged","className","classes","header","to","logo","onClick","replace","Layout","ProfileForm","newPasswordInputRef","useRef","form","onSubmit","e","preventDefault","enteredNewPassword","current","fetch","method","body","JSON","stringify","idToken","password","returnSecureToken","headers","then","res","control","htmlFor","type","id","minLength","ref","action","UserProfile","profile","AuthForm","isLogin","setIsLogin","isLoading","setIsLoading","enteredEmailRef","enteredPasswordRef","auth","url","enteredEmail","enteredPassword","email","ok","json","data","errorMessage","error","message","Error","expiresIn","toISOString","catch","err","alert","required","actions","toggle","prevState","AuthPage","StartingPageContent","starting","HomePage","App","path","exact","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.cf6d1aeb.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ProfileForm_form__1iqyB\",\"control\":\"ProfileForm_control__1Hudh\",\"action\":\"ProfileForm_action__AVOOv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"MainNavigation_header__P3xXC\",\"logo\":\"MainNavigation_logo__3d1IG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"UserProfile_profile__3x3-m\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"starting\":\"StartingPageContent_starting__WLPiK\"};","import React, { useCallback, useEffect, useState } from 'react';\r\n\r\nlet logoutTimer;\r\n\r\nconst AuthContext = React.createContext({\r\n  token: '',\r\n  isLoggedIn: false,\r\n  login: (token) => {},\r\n  logout: () => {},\r\n});\r\n\r\nconst calculateRemainigTime = (expirationTime) => {\r\n  const currentTime = new Date().getTime();\r\n\r\n  const adjExpirationTime = new Date(expirationTime).getTime();\r\n\r\n  const remainingDuration = adjExpirationTime - currentTime;\r\n\r\n  return remainingDuration;\r\n};\r\n\r\nconst retrieveStoredToken = () => {\r\n  const storedToken = localStorage.getItem('token');\r\n\r\n  const storedExpirationTime = localStorage.getItem('expirationTime');\r\n\r\n  const remainingTime = calculateRemainigTime(storedExpirationTime);\r\n\r\n  if (remainingTime <= 60000) {\r\n    localStorage.removeItem('token');\r\n    localStorage.removeItem('expirationTime');\r\n\r\n    return null;\r\n  }\r\n\r\n  return {\r\n    token: storedToken,\r\n    duration: remainingTime,\r\n  };\r\n};\r\n\r\nexport const AuthContextProvider = (props) => {\r\n  const tokenData = retrieveStoredToken();\r\n\r\n  let initialToken;\r\n\r\n  if (tokenData) {\r\n    initialToken = tokenData.token;\r\n  }\r\n\r\n  const [token, setToken] = useState(initialToken);\r\n\r\n  const userIsLoggedIn = !!token;\r\n\r\n  const logoutHandler = useCallback(() => {\r\n    setToken(null);\r\n    localStorage.removeItem('token');\r\n    localStorage.removeItem('expirationTime');\r\n\r\n    if (logoutTimer) {\r\n      clearTimeout(logoutTimer);\r\n    }\r\n  }, []);\r\n\r\n  const loginHandler = (token, expirationTime) => {\r\n    setToken(token);\r\n    localStorage.setItem('token', token);\r\n\r\n    localStorage.setItem('expirationTime', expirationTime);\r\n\r\n    const remainingTime = calculateRemainigTime(expirationTime);\r\n\r\n    logoutTimer = setTimeout(logoutHandler, remainingTime);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (tokenData) {\r\n      console.log(tokenData.duration);\r\n      logoutTimer = setTimeout(logoutHandler, tokenData.duration);\r\n    }\r\n  }, [tokenData, logoutHandler]);\r\n\r\n  const contextValue = {\r\n    token: token,\r\n    isLoggedIn: userIsLoggedIn,\r\n    login: loginHandler,\r\n    logout: logoutHandler,\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={contextValue}>\r\n      {props.children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport default AuthContext;\r\n","import { Link } from 'react-router-dom';\nimport { useContext } from 'react';\nimport AuthContext from '../../store/auth-context';\nimport classes from './MainNavigation.module.css';\nimport { useHistory } from 'react-router';\n\nconst MainNavigation = () => {\n  const authCtx = useContext(AuthContext);\n\n  const history = useHistory();\n\n  const userIsLogged = authCtx.isLoggedIn;\n\n  const logoutHandler = () => {\n    authCtx.logout();\n    history.replace('/login');\n  };\n  return (\n    <header className={classes.header}>\n      <Link to='/'>\n        <div className={classes.logo}>React Auth</div>\n      </Link>\n      <nav>\n        <ul>\n          {!userIsLogged && (\n            <li>\n              <Link to='/auth'>Login</Link>\n            </li>\n          )}\n          {userIsLogged && (\n            <li>\n              <Link to='/profile'>Profile</Link>\n            </li>\n          )}\n          {userIsLogged && (\n            <li>\n              <button onClick={logoutHandler}>Logout</button>\n            </li>\n          )}\n        </ul>\n      </nav>\n    </header>\n  );\n};\n\nexport default MainNavigation;\n","import { Fragment } from 'react';\n\nimport MainNavigation from './MainNavigation';\n\nconst Layout = (props) => {\n  return (\n    <Fragment>\n      <MainNavigation />\n      <main>{props.children}</main>\n    </Fragment>\n  );\n};\n\nexport default Layout;\n","import classes from './ProfileForm.module.css';\nimport { useContext, useRef } from 'react';\nimport AuthContext from '../../store/auth-context';\nimport { useHistory } from 'react-router';\n\nconst ProfileForm = () => {\n  const authCtx = useContext(AuthContext);\n  const newPasswordInputRef = useRef();\n\n  const history = useHistory();\n\n  const formSubmitHandler = (e) => {\n    e.preventDefault();\n    const enteredNewPassword = newPasswordInputRef.current.value;\n\n    fetch(\n      'https://identitytoolkit.googleapis.com/v1/accounts:update?key=AIzaSyCdDFg9XMtigOaXW0H8_V1NwICbJ89pSTE',\n      {\n        method: 'POST',\n        body: JSON.stringify({\n          idToken: authCtx.token,\n          password: enteredNewPassword,\n          returnSecureToken: true,\n        }),\n\n        headers: {\n          'Content-Type': 'application/json',\n        },\n      }\n    ).then((res) => {\n      history.replace('/');\n      //assumption: Always succeeds!!!\n      console.log(res);\n    });\n  };\n  return (\n    <form className={classes.form} onSubmit={formSubmitHandler}>\n      <div className={classes.control}>\n        <label htmlFor='new-password'>New Password</label>\n        <input\n          type='password'\n          id='new-password'\n          minLength='6'\n          ref={newPasswordInputRef}\n        />\n      </div>\n      <div className={classes.action}>\n        <button>Change Password</button>\n      </div>\n    </form>\n  );\n};\n\nexport default ProfileForm;\n","import ProfileForm from './ProfileForm';\nimport classes from './UserProfile.module.css';\n\nconst UserProfile = () => {\n  return (\n    <section className={classes.profile}>\n      <h1>Your User Profile</h1>\n      <ProfileForm />\n    </section>\n  );\n};\n\nexport default UserProfile;\n","import { useRef, useState, useContext } from 'react';\nimport AuthContext from '../../store/auth-context';\nimport classes from './AuthForm.module.css';\nimport { useHistory } from 'react-router';\n\nconst AuthForm = () => {\n  const [isLogin, setIsLogin] = useState(true);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const history = useHistory();\n\n  const authCtx = useContext(AuthContext);\n\n  const enteredEmailRef = useRef();\n  const enteredPasswordRef = useRef();\n\n  const switchAuthModeHandler = () => {\n    setIsLogin((prevState) => !prevState);\n  };\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    const enteredEmail = enteredEmailRef.current.value;\n    const enteredPassword = enteredPasswordRef.current.value;\n\n    console.log(enteredEmail, enteredPassword);\n    setIsLoading(true);\n    let url;\n\n    if (isLogin) {\n      url =\n        'https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyCdDFg9XMtigOaXW0H8_V1NwICbJ89pSTE';\n    } else {\n      url =\n        'https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyCdDFg9XMtigOaXW0H8_V1NwICbJ89pSTE';\n    }\n    fetch(url, {\n      method: 'POST',\n      body: JSON.stringify({\n        email: enteredEmail,\n        password: enteredPassword,\n        returnSecureToken: true,\n      }),\n      headers: { 'Content-type': 'application/json' },\n    })\n      .then((res) => {\n        setIsLoading(false);\n        if (res.ok) {\n          return res.json();\n        } else {\n          return res.json().then((data) => {\n            let errorMessage = 'Authentication failed';\n            if (data && data.error && data.error.message) {\n              errorMessage = data.error.message;\n            }\n            throw new Error(errorMessage);\n          });\n        }\n      })\n      .then((data) => {\n        const expirationTime = new Date(\n          new Date().getTime() + +data.expiresIn * 1000\n        );\n        authCtx.login(data.idToken, expirationTime.toISOString());\n        history.replace('/');\n      })\n      .catch((err) => {\n        alert(err.message);\n      });\n  };\n\n  return (\n    <section className={classes.auth}>\n      <h1>{isLogin ? 'Login' : 'Sign Up'}</h1>\n      <form onSubmit={submitHandler}>\n        <div className={classes.control}>\n          <label htmlFor='email'>Your Email</label>\n          <input type='email' id='email' required ref={enteredEmailRef} />\n        </div>\n        <div className={classes.control}>\n          <label htmlFor='password'>Your Password</label>\n          <input\n            type='password'\n            id='password'\n            required\n            ref={enteredPasswordRef}\n          />\n        </div>\n        <div className={classes.actions}>\n          {!isLoading && (\n            <button>{isLogin ? 'Login' : 'Create Account'}</button>\n          )}\n          {isLoading && <p>Loading Registration........</p>}\n          <button\n            type='button'\n            className={classes.toggle}\n            onClick={switchAuthModeHandler}\n          >\n            {isLogin ? 'Create new account' : 'Login with existing account'}\n          </button>\n        </div>\n      </form>\n    </section>\n  );\n};\n\nexport default AuthForm;\n","import AuthForm from '../components/Auth/AuthForm';\n\nconst AuthPage = () => {\n  return <AuthForm />;\n};\n\nexport default AuthPage;\n","import classes from './StartingPageContent.module.css';\n\nconst StartingPageContent = () => {\n  return (\n    <section className={classes.starting}>\n      <h1>Welcome on Board!</h1>\n    </section>\n  );\n};\n\nexport default StartingPageContent;\n","import StartingPageContent from '../components/StartingPage/StartingPageContent';\n\nconst HomePage = () => {\n  return <StartingPageContent />;\n};\n\nexport default HomePage;\n","import { Switch, Route, Redirect } from 'react-router-dom';\nimport { useContext } from 'react';\nimport AuthContext from './store/auth-context';\nimport Layout from './components/Layout/Layout';\nimport UserProfile from './components/Profile/UserProfile';\nimport AuthPage from './pages/AuthPage';\nimport HomePage from './pages/HomePage';\n\nfunction App() {\n  const authCtx = useContext(AuthContext);\n\n  const isLoggedIn = authCtx.isLoggedIn;\n\n  return (\n    <Layout>\n      <Switch>\n        <Route path='/' exact>\n          <HomePage />\n        </Route>\n        {!isLoggedIn && (\n          <Route path='/auth'>\n            <AuthPage />\n          </Route>\n        )}\n\n        <Route path='/profile'>\n          {isLoggedIn && <UserProfile />}\n          {!isLoggedIn && <Redirect to='/auth' />}\n        </Route>\n        <Route path='*'>\n          <Redirect to='/' />\n        </Route>\n      </Switch>\n    </Layout>\n  );\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { AuthContextProvider } from './store/auth-context';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <AuthContextProvider>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </AuthContextProvider>,\n\n  document.getElementById('root')\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"auth\":\"AuthForm_auth__3plU1\",\"control\":\"AuthForm_control__3dq7F\",\"actions\":\"AuthForm_actions__1wXgP\",\"toggle\":\"AuthForm_toggle__2WkwN\"};"],"sourceRoot":""}